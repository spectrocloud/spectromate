name: Test & Validate

on:
  pull_request:
    types: ['synchronize', 'opened', 'reopened', 'ready_for_review']
    branches:
    - main

env:
  GITHUB_TOKEN: ${{ github.token }}


concurrency:
  group: test-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run-ci:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    if: ${{ !github.event.pull_request.draft }}
    steps:
    # If the condition above is not met, aka, the PR is not in draft status, then this step is skipped.
    # Because this step is part of the critical path, omission of this step will result in remaining CI steps not gettinge executed.
    # As of 8/8/2022 there is now way to enforce this beahvior in GitHub Actions CI.
      - run: exit 0


  linting:
    needs: [run-ci]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - uses: actions/setup-go@v4
      with:
        go-version: '1.20'
        check-latest: true

    - name: Lint Internal Package
      uses: golangci/golangci-lint-action@v3
      with:
        args: --verbose --timeout 5m

  test:
    name: Test
    needs: [run-ci,linting]
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'
        check-latest: true
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3

    -
      name: "Get dependencies"
      id: dependencies
      run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi
  
    - name: Go Tests
      run: |
        go test ./...

  compile:
    name: Compile validation
    needs: [run-ci,linting]
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'
        check-latest: true
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:  
        args: -v
  
    - name: build & execute
      run: |
        echo "--------------------------------------------------"
        go build -ldflags="-X 'spectrocloud.com/spectromate/cmd.VersionString=1.0.0'" -o=spectromate -v
        ./spectromate version

  Docker:
    needs: [run-ci,linting,compile]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - uses: actions/setup-go@v4
      with:
        go-version: '1.20'
        check-latest: true

    - name: Build
      run: |
        docker system prune -a -f
        docker build --no-cache -t spectromate:dev .