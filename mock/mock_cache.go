// Code generated by MockGen. DO NOT EDIT.
// Source: internal/cache.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockCache is a mock of Cache interface.
type MockCache struct {
	ctrl     *gomock.Controller
	recorder *MockCacheMockRecorder
}

// MockCacheMockRecorder is the mock recorder for MockCache.
type MockCacheMockRecorder struct {
	mock *MockCache
}

// NewMockCache creates a new mock instance.
func NewMockCache(ctrl *gomock.Controller) *MockCache {
	mock := &MockCache{ctrl: ctrl}
	mock.recorder = &MockCacheMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCache) EXPECT() *MockCacheMockRecorder {
	return m.recorder
}

// ExpireKey mocks base method.
func (m *MockCache) ExpireKey(ctx context.Context, key string, t time.Duration) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExpireKey", ctx, key, t)
	ret0, _ := ret[0].(error)
	return ret0
}

// ExpireKey indicates an expected call of ExpireKey.
func (mr *MockCacheMockRecorder) ExpireKey(ctx, key, t interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExpireKey", reflect.TypeOf((*MockCache)(nil).ExpireKey), ctx, key, t)
}

// GetHashMap mocks base method.
func (m *MockCache) GetHashMap(ctx context.Context, primaryKey string) (bool, map[string]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHashMap", ctx, primaryKey)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(map[string]string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetHashMap indicates an expected call of GetHashMap.
func (mr *MockCacheMockRecorder) GetHashMap(ctx, primaryKey interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHashMap", reflect.TypeOf((*MockCache)(nil).GetHashMap), ctx, primaryKey)
}

// Ping mocks base method.
func (m *MockCache) Ping() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Ping")
	ret0, _ := ret[0].(error)
	return ret0
}

// Ping indicates an expected call of Ping.
func (mr *MockCacheMockRecorder) Ping() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Ping", reflect.TypeOf((*MockCache)(nil).Ping))
}

// StoreHashMap mocks base method.
func (m *MockCache) StoreHashMap(ctx context.Context, primaryKey string, item map[string]interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StoreHashMap", ctx, primaryKey, item)
	ret0, _ := ret[0].(error)
	return ret0
}

// StoreHashMap indicates an expected call of StoreHashMap.
func (mr *MockCacheMockRecorder) StoreHashMap(ctx, primaryKey, item interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StoreHashMap", reflect.TypeOf((*MockCache)(nil).StoreHashMap), ctx, primaryKey, item)
}
